@model IEnumerable<EducaEFRT.Models.ViewModels.ReporteAsistenciaViewModel>

@{
    ViewData["Title"] = "Reportes de Asistencia";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EduControl</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#4361ee',
                        'secondary': '#3f37c9',
                        'accent': '#4895ef',
                        'dark': '#0d3b66',
                        'light': '#f8f9fa',
                        'primary-light': '#eef2ff',
                        'text-main': '#334155',
                        'text-secondary': '#64748b'
                    },
                    fontFamily: {
                        'poppins': ['Poppins', 'sans-serif']
                    }
                }
            }
        }
    </script>

    <style>
        .bg-gradient-custom {
            background: linear-gradient(135deg, #f6f8fc 0%, #e8effa 100%);
        }

        .bg-gradient-button {
            background: linear-gradient(90deg, #4361ee 0%, #4895ef 100%);
        }

        .bg-gradient-button-hover {
            background: linear-gradient(90deg, #3f37c9 0%, #4361ee 100%);
        }

        .chart-legend-box {
            width: 12px;
            height: 12px;
            border-radius: 3px;
            display: inline-block;
            margin-right: 8px;
        }

        #pieChartContainer {
            width: 250px;
            height: 250px;
        }
    </style>
</head>
<body class="font-poppins bg-gradient-custom text-text-main min-h-screen">

    <div class="w-full p-6">
        <!-- Header -->
        <header class="flex justify-between items-center mb-8 pb-4 border-b border-gray-200">
            <div class="flex items-center gap-4">
                <a href="@Url.Action("PanelAdmin", "Admin")" class="text-primary hover:text-secondary transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                </a>
                <div>
                    <h1 class="text-3xl font-bold text-dark m-0">REPORTES DE ASISTENCIA</h1>
                    <p class="text-text-secondary m-0">Análisis de asistencia docente</p>
                </div>
            </div>
            <div class="flex items-center gap-4">
                <div class="w-10 h-10 rounded-full bg-primary-light flex items-center justify-center text-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                        <circle cx="12" cy="7" r="4"></circle>
                    </svg>
                </div>
                <form action="@Url.Action("Logout", "Account")" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="text-primary font-semibold hover:text-secondary transition-colors duration-300 bg-transparent border-0 cursor-pointer">
                        Cerrar Sesión
                    </button>
                </form>
            </div>
        </header>

        <!-- Filtering Section -->
        <div class="bg-white rounded-2xl p-6 shadow-lg border border-gray-100 mb-6">
            <h2 class="text-xl font-semibold text-text-secondary mt-0 mb-6 border-l-4 border-primary pl-4">
                Filtros de Búsqueda
            </h2>
            <div class="flex flex-wrap justify-center items-end gap-4">
                <div class="flex flex-col">
                    <label for="docente" class="text-sm font-medium text-text-secondary mb-1">Docente</label>
                    <select id="docente" class="p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent w-40">
                        <option value="">Todos</option>
                        @if (ViewBag.Docentes != null)
                        {
                            foreach (var docente in ViewBag.Docentes)
                            {
                                <option value="@docente.Value">@docente.Text</option>
                            }
                        }
                    </select>
                </div>
                <div class="flex flex-col">
                    <label for="curso" class="text-sm font-medium text-text-secondary mb-1">Curso</label>
                    <select id="curso" class="p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent w-40">
                        <option value="">Todos</option>
                        @if (ViewBag.Cursos != null)
                        {
                            foreach (var curso in ViewBag.Cursos)
                            {
                                <option value="@curso.Value">@curso.Text</option>
                            }
                        }
                    </select>
                </div>
                <div class="flex flex-col">
                    <label for="seccion" class="text-sm font-medium text-text-secondary mb-1">Sección</label>
                    <select id="seccion" class="p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent w-40">
                        <option value="">Todas</option>
                        @if (ViewBag.Secciones != null)
                        {
                            foreach (var seccion in ViewBag.Secciones)
                            {
                                <option value="@seccion.Value">@seccion.Text</option>
                            }
                        }
                    </select>
                </div>
                <div class="flex flex-col">
                    <label for="turno" class="text-sm font-medium text-text-secondary mb-1">Turno</label>
                    <select id="turno" class="p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent w-40">
                        <option value="">Todos</option>
                        @if (ViewBag.Turnos != null)
                        {
                            foreach (var turno in ViewBag.Turnos)
                            {
                                <option value="@turno.Value">@turno.Text</option>
                            }
                        }
                    </select>
                </div>
                <button onclick="generarReporte()" class="bg-gradient-button hover:bg-gradient-button-hover text-white font-semibold py-2.5 px-6 rounded-lg shadow-md transition-all duration-300">
                    Generar Reporte
                </button>
                <button onclick="limpiarFiltros()" class="bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2.5 px-6 rounded-lg shadow-md transition-all duration-300">
                    Limpiar Filtros
                </button>
            </div>
        </div>
        
        <!-- Debug Info -->
        @if (ViewBag.Error != null)
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
                <strong>Error:</strong> @ViewBag.Error
            </div>
        }
        
        <div class="bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded mb-4">
            <strong>Debug:</strong> Mostrando @(Model?.Count() ?? 0) registros
            @if (Request.QueryString.Count > 0)
            {
                <br><strong>Filtros aplicados:</strong>
                @foreach (string key in Request.QueryString.AllKeys)
                {
                    <span class="ml-2">@key = @Request.QueryString[key]</span>
                }
            }
        </div>
        
        <!-- Table Results Section -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden mb-6">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-text-secondary uppercase tracking-wider">Docente</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-text-secondary uppercase tracking-wider">Curso</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-text-secondary uppercase tracking-wider">Sección</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-text-secondary uppercase tracking-wider">Turno</th>
                            <th class="px-6 py-4 text-center text-xs font-semibold text-text-secondary uppercase tracking-wider">Total Clases</th>
                            <th class="px-6 py-4 text-center text-xs font-semibold text-text-secondary uppercase tracking-wider">Asistencias</th>
                            <th class="px-6 py-4 text-center text-xs font-semibold text-text-secondary uppercase tracking-wider">Inasistencias</th>
                            <th class="px-6 py-4 text-center text-xs font-semibold text-text-secondary uppercase tracking-wider">Tardanzas</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @if (Model != null && Model.Any())
                        {
                            foreach (var item in Model)
                            {
                                <tr class="hover:bg-gray-50 transition-colors">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-text-main">@item.Docente</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-text-secondary">@item.Curso</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-text-secondary">@item.Seccion</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-text-secondary">@item.Turno</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center font-bold text-text-main">@item.TotalClases</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-green-600 font-bold">@item.Asistencias</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-red-600">@item.Inasistencias</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-yellow-600">@item.Tardanzas</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="px-6 py-8 text-center text-text-secondary">
                                    <div class="flex flex-col items-center gap-2">
                                        <svg class="w-12 h-12 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                        </svg>
                                        <p class="text-lg font-medium">No hay datos de asistencia disponibles</p>
                                        <p class="text-sm">Ejecute el script test_data.sql para agregar datos de prueba</p>
                                        @if (ViewBag.Error != null)
                                        {
                                            <p class="text-sm text-red-600 mt-2">Error: @ViewBag.Error</p>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Chart Section -->
        <div class="bg-white rounded-2xl p-6 shadow-lg border border-gray-100 mb-6">
            <h2 class="text-xl font-semibold text-text-secondary mt-0 mb-6 border-l-4 border-primary pl-4">
                Estadísticas de Asistencia
            </h2>
            <div class="flex flex-col items-center justify-center gap-6">
                <div class="flex gap-6 justify-center text-sm text-text-main font-medium">
                    <div class="flex items-center">
                        <span class="chart-legend-box bg-primary"></span> Asistió
                    </div>
                    <div class="flex items-center">
                        <span class="chart-legend-box bg-red-500"></span> Faltó
                    </div>
                    <div class="flex items-center">
                        <span class="chart-legend-box bg-yellow-500"></span> Tardanza
                    </div>
                </div>
                <div id="pieChartContainer">
                    <canvas id="attendanceChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Export Buttons -->
        <div class="flex justify-center gap-4">
            <button class="bg-green-600 hover:bg-green-700 text-white font-semibold py-2.5 px-8 rounded-lg shadow-md transition-all duration-300 transform hover:scale-105">
                Exportar PDF
            </button>
            <button class="bg-yellow-600 hover:bg-yellow-700 text-white font-semibold py-2.5 px-8 rounded-lg shadow-md transition-all duration-300 transform hover:scale-105">
                Exportar Excel
            </button>
        </div>
    </div>

    <script>
        function generarReporte() {
            const docente = document.getElementById('docente').value;
            const curso = document.getElementById('curso').value;
            const seccion = document.getElementById('seccion').value;
            const turno = document.getElementById('turno').value;
            
            console.log('=== VALORES SELECCIONADOS ===');
            console.log('docente:', docente);
            console.log('curso:', curso);
            console.log('seccion:', seccion);
            console.log('turno:', turno);
            
            let url = '@Url.Action("Reportes", "Admin")';
            let params = [];
            
            if (docente) params.push('docente=' + docente);
            if (curso) params.push('curso=' + curso);
            if (seccion) params.push('seccion=' + seccion);
            if (turno) params.push('turno=' + turno);
            
            if (params.length > 0) {
                url += '?' + params.join('&');
            }
            
            console.log('URL final:', url);
            window.location.href = url;
        }
        
        function limpiarFiltros() {
            window.location.href = '@Url.Action("Reportes", "Admin")';
        }
        
        // Mantener valores seleccionados después del filtrado
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            
            if (urlParams.get('docente')) {
                document.getElementById('docente').value = urlParams.get('docente');
            }
            if (urlParams.get('curso')) {
                document.getElementById('curso').value = urlParams.get('curso');
            }
            if (urlParams.get('seccion')) {
                document.getElementById('seccion').value = urlParams.get('seccion');
            }
            if (urlParams.get('turno')) {
                document.getElementById('turno').value = urlParams.get('turno');
            }
        });
        
        // Calcular totales de la tabla
        let totalAsistencias = 0;
        let totalInasistencias = 0;
        let totalTardanzas = 0;
        
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <text>
                totalAsistencias += @item.Asistencias;
                totalInasistencias += @item.Inasistencias;
                totalTardanzas += @item.Tardanzas;
                </text>
            }
        }
        
        const ctx = document.getElementById('attendanceChart').getContext('2d');
        const attendanceChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Asistió', 'Faltó', 'Tardanza'],
                datasets: [{
                    data: [totalAsistencias, totalInasistencias, totalTardanzas],
                    backgroundColor: [
                        '#4361ee',
                        '#ef4444',
                        '#eab308'
                    ],
                    borderWidth: 2,
                    borderColor: '#fff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    </script>

</body>
</html>