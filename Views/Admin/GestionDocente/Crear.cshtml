@model EducaEFRT.Models.ViewModels.CrearDocenteViewModel
@{
    ViewData["Title"] = "Registro de Docente";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EduControl</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#4361ee',
                        'secondary': '#3f37c9',
                        'accent': '#4895ef',
                        'dark': '#0d3b66',
                        'light': '#f8f9fa',
                        'primary-light': '#eef2ff',
                        'text-main': '#334155',
                        'text-secondary': '#64748b'
                    },
                    fontFamily: {
                        'poppins': ['Poppins', 'sans-serif']
                    }
                }
            }
        }
    </script>

    <style>
        .bg-gradient-custom {
            background: linear-gradient(135deg, #f6f8fc 0%, #e8effa 100%);
        }

        .bg-gradient-button {
            background: linear-gradient(90deg, #4361ee 0%, #4895ef 100%);
        }

        .hover\:bg-gradient-button-hover:hover {
            background: linear-gradient(90deg, #3f37c9 0%, #4361ee 100%);
        }

        .file-input-hidden {
            display: none;
        }
    </style>
</head>
<body class="font-poppins bg-gradient-custom text-text-main min-h-screen">
    <div class="w-full max-w-5xl mx-auto p-6">
        <!-- Header -->
        <header class="flex justify-between items-center mb-8 pb-4 border-b border-gray-200">
            <div class="flex items-center gap-4">
                <a href="@Url.Action("GestionDocente", "Admin")" class="text-primary hover:text-secondary transition-colors" title="Volver a la lista">
                    <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                </a>
                <div>
                    <h1 class="text-3xl font-bold text-dark m-0">REGISTRO DE NUEVO DOCENTE</h1>
                    <p class="text-text-secondary m-0">Complete la información del nuevo profesor</p>
                </div>
            </div>
        </header>

        <!-- Formulario de Registro (uso Html.BeginForm para integración MVC y validaciones) -->
        @using (Html.BeginForm("CrearDocente", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "w-full" }))
        {
            @Html.AntiForgeryToken()
            <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-8">
                @Html.ValidationSummary(true, "", new { @class = "text-red-500 mb-4" })

                <!-- Credenciales de Usuario (arriba) -->
                <h2 class="text-xl font-semibold text-text-secondary mt-0 mb-8 border-l-4 border-primary pl-4">
                    Credenciales de Acceso
                </h2>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                    <div>
                        @Html.LabelFor(m => m.Username, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                        @Html.TextBoxFor(m => m.Username, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Usuario" })
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-red-500 text-sm mt-1 block" })
                    </div>
                    <div>
                        @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                        @Html.PasswordFor(m => m.Password, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Contraseña" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-red-500 text-sm mt-1 block" })
                    </div>
                </div>

                <!-- Datos Personales -->
                <h2 class="text-xl font-semibold text-text-secondary mt-0 mb-8 border-l-4 border-primary pl-4">
                    Datos Personales
                </h2>

                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <!-- Columna de Campos del Formulario -->
                    <div class="lg:col-span-2 grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            @Html.LabelFor(m => m.Dni, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.Dni, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "DNI" })
                            @Html.ValidationMessageFor(m => m.Dni, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>

                        <div>
                            @Html.LabelFor(m => m.Nombres, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.Nombres, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Nombres" })
                            @Html.ValidationMessageFor(m => m.Nombres, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>

                        <div class="md:col-span-2">
                            @Html.LabelFor(m => m.Apellidos, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.Apellidos, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Apellidos" })
                            @Html.ValidationMessageFor(m => m.Apellidos, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>

                        <div>
                            @Html.LabelFor(m => m.Correo, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.Correo, new { @type = "email", @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "correo@ejemplo.com" })
                            @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>

                        <div>
                            @Html.LabelFor(m => m.Celular, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.Celular, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Celular" })
                            @Html.ValidationMessageFor(m => m.Celular, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>

                        <div class="md:col-span-2">
                            @Html.LabelFor(m => m.Direccion, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.Direccion, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Dirección" })
                            @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>

                        <div>
                            @Html.LabelFor(m => m.Profesion, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.Profesion, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Profesión" })
                            @Html.ValidationMessageFor(m => m.Profesion, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>

                        <div>
                            @Html.LabelFor(m => m.GradoAcademico, htmlAttributes: new { @class = "block text-sm font-medium text-text-main mb-2" })
                            @Html.TextBoxFor(m => m.GradoAcademico, new { @class = "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary", placeholder = "Grado Académico" })
                            @Html.ValidationMessageFor(m => m.GradoAcademico, "", new { @class = "text-red-500 text-sm mt-1 block" })
                        </div>
                    </div>

                    <!-- Columna de Carga de Imagen -->
                    <div class="lg:col-span-1 flex flex-col items-center justify-center">
                        <label class="block text-sm font-medium text-text-main mb-2">Foto de Perfil</label>
                        <div class="w-full aspect-square border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center text-center p-4">
                            <div id="image-preview-container" class="w-full h-full flex items-center justify-center">
                                <img id="image-preview" src="" alt="Vista previa" class="hidden max-w-full max-h-full rounded-md">
                                <span id="image-placeholder" class="text-text-secondary">
                                    <svg class="w-16 h-16 mx-auto text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    <span class="mt-2 block">Sin imagen</span>
                                </span>
                            </div>
                        </div>

                        <label for="FotoFile" class="mt-4 bg-white border border-gray-300 text-text-main px-6 py-2 rounded-lg font-semibold hover:bg-gray-50 transition-all duration-300 cursor-pointer">
                            Cargar Imagen
                        </label>
                        <input type="file" id="FotoFile" name="FotoFile" class="file-input-hidden" accept="image/*" onchange="previewImage(event)">
                        @Html.ValidationMessage("FotoFile", null, new { @class = "text-red-500 text-sm mt-1 block" })
                    </div>
                </div>

                <!-- Campo oculto para el rol -->
                @Html.Hidden("Rol", "Docente")

                <!-- Botones de Acción -->
                <div class="mt-10 pt-6 border-t border-gray-200 flex justify-end gap-4">
                    <a href="@Url.Action("GestionDocente", "Admin")" class="bg-white border border-gray-300 text-text-main px-8 py-3 rounded-lg font-semibold hover:bg-gray-50 transition-all duration-300">
                        Cancelar
                    </a>
                    <button type="submit" class="bg-gradient-button hover:bg-gradient-button-hover text-white px-8 py-3 rounded-lg font-semibold shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
                        Registrar Docente
                    </button>
                </div>
            </div>
        }

    </div>

    <script>
        function previewImage(event) {
            if (!event || !event.target || !event.target.files || !event.target.files[0]) return;
            const reader = new FileReader();
            reader.onload = function () {
                const output = document.getElementById('image-preview');
                const placeholder = document.getElementById('image-placeholder');
                output.src = reader.result;
                output.classList.remove('hidden');
                placeholder.classList.add('hidden');
            };
            reader.readAsDataURL(event.target.files[0]);
        }
    </script>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>
